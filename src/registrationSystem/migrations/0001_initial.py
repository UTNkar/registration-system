# Generated by Django 3.1.1 on 2020-11-12 18:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import registrationSystem.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RiverraftingUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=254, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('password', models.CharField(max_length=254, verbose_name='Password')),
                ('phone_nr', models.CharField(max_length=20, verbose_name='Phone number')),
                ('person_nr', models.CharField(max_length=13, unique=True, verbose_name='Person number')),
                ('is_utn_member', models.BooleanField(verbose_name='UTN Member')),
                ('is_staff', models.BooleanField()),
                ('lifevest_size', models.CharField(choices=[('XL', 'XL'), ('L', 'L'), ('M', 'M'), ('S', 'S'), ('XS', 'XS')], max_length=2, verbose_name='Lifevest size')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', registrationSystem.models.CommonUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='InterestCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254)),
                ('email', models.EmailField(max_length=254)),
                ('person_nr', models.CharField(max_length=13)),
                ('status', models.CharField(choices=[('mail unconfirmed', 'Mail-Unconfirmed'), ('waiting', 'Waiting'), ('won', 'Won'), ('lost', 'Lost'), ('declined', 'Declined'), ('accepted', 'Accepted'), ('confirmed', 'Confirmed')], default='mail unconfirmed', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='RiverraftingTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=254, verbose_name='Team name')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Start Number')),
                ('environment_raft', models.BooleanField(verbose_name='I want an environmentally friendly raft')),
                ('presentation', models.CharField(blank=True, max_length=250, null=True, verbose_name='Presentation')),
                ('leader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailConfirmations',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('interestCheckId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registrationSystem.interestcheck')),
            ],
        ),
        migrations.AddField(
            model_name='riverraftinguser',
            name='belongs_to_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registrationSystem.riverraftingteam', verbose_name='Group'),
        ),
        migrations.AddField(
            model_name='riverraftinguser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='riverraftinguser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
